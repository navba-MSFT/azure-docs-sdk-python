### YamlMime:PythonClass
uid: azure.identity.aio.CertificateCredential
name: CertificateCredential
fullName: azure.identity.aio.CertificateCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
summary: 'Authenticates as a service principal using a certificate.


  The certificate must have an RSA private key, because this credential signs assertions
  using RS256.'
constructor:
  syntax: CertificateCredential(tenant_id, client_id, certificate_path=None, **kwargs)
  parameters:
  - name: tenant_id
    description: ID of the service principal's tenant. Also called its 'directory'
      ID.
    isRequired: true
    types:
    - <xref:str>
  - name: client_id
    description: the service principal's client ID
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_path
    description: 'path to a PEM-encoded certificate file including the private key.
      If not provided,

      *certificate_data* is required.'
    isRequired: true
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: certificate_data
    description: the bytes of a certificate in PEM format, including the private key
    types:
    - <xref:bytes>
  - name: password
    description: 'The certificate''s password. If a unicode string, it will be encoded
      as UTF-8. If the certificate

      requires a different encoding, pass appropriately encoded bytes instead.'
    types:
    - <xref:str>
    - <xref:bytes>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
methods:
- uid: azure.identity.aio.CertificateCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: close()
- uid: azure.identity.aio.CertificateCredential.get_token
  name: get_token
  summary: 'Asynchronously request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  parameters:
  - name: scopes
    description: desired scopes for the access token. This method requires at least
      one scope.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - description: 'authentication failed. The error''s `message`

      attribute gives a reason. Any error response from Azure Active Directory is
      available as the error''s

      `response` attribute.'
    type: ~azure.core.exceptions.ClientAuthenticationError
